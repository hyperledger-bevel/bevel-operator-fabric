"use strict";(self.webpackChunkwebsite_docs=self.webpackChunkwebsite_docs||[]).push([[6633],{7589:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var a=t(4848),s=t(8453);const r={id:"getting-started",title:"Getting started"},i=void 0,o={id:"gateway-api/getting-started",title:"Getting started",description:"The gateway-api implementation has been tested with traefik and istio ingress proxies. But the following can be extended to other proxies as well.",source:"@site/docs/gateway-api/getting-started.md",sourceDirName:"gateway-api",slug:"/gateway-api/getting-started",permalink:"/bevel-operator-fabric/docs/gateway-api/getting-started",draft:!1,unlisted:!1,editUrl:"https://github.com/hyperledger-bevel/bevel-operator-fabric/edit/master/website/docs/gateway-api/getting-started.md",tags:[],version:"current",frontMatter:{id:"getting-started",title:"Getting started"},sidebar:"mainSidebar",previous:{title:"Introduction",permalink:"/bevel-operator-fabric/docs/gateway-api/introduction"},next:{title:"Implementation",permalink:"/bevel-operator-fabric/docs/gateway-api/implementation"}},l={},c=[{value:"Setup",id:"setup",level:2},{value:"Traefik implementation",id:"traefik-implementation",level:2},{value:"Istio implementation",id:"istio-implementation",level:2}];function p(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"The gateway-api implementation has been tested with traefik and istio ingress proxies. But the following can be extended to other proxies as well."}),"\n",(0,a.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f https://github.com/kubernetes-sigs/gateway-api/releases/download/v0.7.0/experimental-install.yaml\n"})}),"\n",(0,a.jsx)(n.h2,{id:"traefik-implementation",children:"Traefik implementation"}),"\n",(0,a.jsx)(n.p,{children:"The first step is to create a service for traefik with necessary RBAC."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: traefik-controller\n\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: traefik\n\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: traefik-lb\n\n  template:\n    metadata:\n      labels:\n        app: traefik-lb\n\n    spec:\n      serviceAccountName: traefik-controller\n      containers:\n        - name: traefik\n          image: traefik:v2.10\n          args:\n            - --entrypoints.web.address=:80\n            - --entrypoints.websecure.address=:443\n            - --experimental.kubernetesgateway\n            - --providers.kubernetesgateway\n\n          ports:\n            - name: web\n              containerPort: 80\n\n            - name: websecure\n              containerPort: 443\n\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: traefik\n\nspec:\n  type: LoadBalancer\n  selector:\n    app: traefik-lb\n\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: web\n      name: web\n\n    - protocol: TCP\n      port: 443\n      targetPort: websecure\n      name: websecure\n"})}),"\n",(0,a.jsx)(n.p,{children:"RBAC configuration:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: gateway-role\nrules:\n  - apiGroups:\n      - ""\n    resources:\n      - namespaces\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - ""\n    resources:\n      - services\n      - endpoints\n      - secrets\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups:\n      - gateway.networking.k8s.io\n    resources:\n      - gatewayclasses\n      - gateways\n      - httproutes\n      - tcproutes\n      - tlsroutes\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups:\n      - gateway.networking.k8s.io\n    resources:\n      - gatewayclasses/status\n      - gateways/status\n      - httproutes/status\n      - tcproutes/status\n      - tlsroutes/status\n    verbs:\n      - update\n\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: gateway-controller\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: gateway-role\nsubjects:\n  - kind: ServiceAccount\n    name: traefik-controller\n    namespace: default\n'})}),"\n",(0,a.jsx)(n.p,{children:"Create a gateway class:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"apiVersion: gateway.networking.k8s.io/v1alpha2\nkind: GatewayClass\nmetadata:\n  name: my-gateway-class #Name of the gateway class\nspec:\n  controllerName: traefik.io/gateway-controller\n"})}),"\n",(0,a.jsx)(n.p,{children:"Create a Gateway resource:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"apiVersion: gateway.networking.k8s.io/v1alpha2\nkind: Gateway\nmetadata:\n  name: traefik-gateway #Name of the gateway\nspec:\n  gatewayClassName: my-gateway-class #Name of the gateway class to refer to\n  listeners:\n    - protocol: TLS \n      port: 443\n      name: tcp\n      tls:\n        mode: Passthrough\n      allowedRoutes:\n        namespaces:\n            from: Selector\n            selector:\n                matchLabels:\n                    kubernetes.io/metadata.name: hlf #Namespace where the fabric resource is deployed (CA, orderer, peer etc)\n"})}),"\n",(0,a.jsxs)(n.p,{children:["For more info and configuration options refer to: ",(0,a.jsx)(n.a,{href:"https://doc.traefik.io/traefik/routing/providers/kubernetes-gateway/",children:"Traefik's Implementation"})]}),"\n",(0,a.jsx)(n.h2,{id:"istio-implementation",children:"Istio implementation"}),"\n",(0,a.jsx)(n.p,{children:"Install Istio using the minimal profile:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"istioctl install --set profile=minimal -y\n"})}),"\n",(0,a.jsx)(n.p,{children:"By default with this installation, a GatewayClass of name istio would be created."}),"\n",(0,a.jsx)(n.p,{children:"Now, Create a Gateway Resource:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"apiVersion: gateway.networking.k8s.io/v1alpha2\nkind: Gateway\nmetadata:\n  name: istio-gateway #Name of the gateway\nspec:\n  gatewayClassName: istio #Name of the gateway class to refer to\n  listeners:\n    - protocol: TLS \n      port: 443\n      name: tcp\n      tls:\n        mode: Passthrough\n      allowedRoutes:\n        namespaces:\n            from: Selector\n            selector:\n                matchLabels:\n                    kubernetes.io/metadata.name: hlf #Namespace where the fabric resource is deployed (CA, orderer, peer etc)\n"})}),"\n",(0,a.jsxs)(n.p,{children:["For more info and configuration options refer to: ",(0,a.jsx)(n.a,{href:"https://istio.io/latest/docs/tasks/traffic-management/ingress/gateway-api/",children:"Istio's Implementation"})]})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var a=t(6540);const s={},r=a.createContext(s);function i(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);