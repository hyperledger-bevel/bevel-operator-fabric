"use strict";(self.webpackChunkwebsite_docs=self.webpackChunkwebsite_docs||[]).push([[122],{1398:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var o=n(4848),r=n(8453);const s={id:"getting-started",title:"Getting started"},i=void 0,a={id:"chaincode-development/getting-started",title:"Getting started",description:"Steps to get started",source:"@site/docs/chaincode-development/getting-started.md",sourceDirName:"chaincode-development",slug:"/chaincode-development/getting-started",permalink:"/bevel-operator-fabric/docs/chaincode-development/getting-started",draft:!1,unlisted:!1,editUrl:"https://github.com/hyperledger-bevel/bevel-operator-fabric/edit/master/website/docs/chaincode-development/getting-started.md",tags:[],version:"current",frontMatter:{id:"getting-started",title:"Getting started"},sidebar:"mainSidebar",previous:{title:"Architecture",permalink:"/bevel-operator-fabric/docs/chaincode-development/architecture"},next:{title:"Getting started",permalink:"/bevel-operator-fabric/docs/chaincode-deployment/getting-started"}},c={},l=[{value:"Steps to get started",id:"steps-to-get-started",level:2},{value:"Start development in your local environment",id:"start-development-in-your-local-environment",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{id:"steps-to-get-started",children:"Steps to get started"}),"\n",(0,o.jsx)(t.p,{children:"To start the server, you need the network config with the admin users for each organization."}),"\n",(0,o.jsxs)(t.p,{children:["You need to download and install the binary from the ",(0,o.jsx)(t.a,{href:"https://github.com/kfsoftware/hlf-cc-dev/releases",children:"latest release"})," in your local machine:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:'hlf-cc-dev serve --address ":8080" --metrics-address ":8081" --config "<PATH_TO_NETWORK_CONFIG>"\n'})}),"\n",(0,o.jsx)(t.h2,{id:"start-development-in-your-local-environment",children:"Start development in your local environment"}),"\n",(0,o.jsx)(t.p,{children:"You need to have a chaincode that's able to be deployed as an external service; you can take a look at the following templates:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["For Go (",(0,o.jsx)(t.a,{href:"https://github.com/kfsoftware/hlf-cc-go-template",children:"https://github.com/kfsoftware/hlf-cc-go-template"}),")"]}),"\n",(0,o.jsxs)(t.li,{children:["For Node.JS (",(0,o.jsx)(t.a,{href:"https://github.com/kfsoftware/hlf-cc-nodejs-template",children:"https://github.com/kfsoftware/hlf-cc-nodejs-template"}),")"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"pending"})," For Java (",(0,o.jsx)(t.a,{href:"https://github.com/kfsoftware/hlf-cc-java-template",children:"https://github.com/kfsoftware/hlf-cc-java-template"}),")"]}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"We recommend using the Go template since it's the easiest one to get started with."}),"\n",(0,o.jsxs)(t.p,{children:["Once you have the chaincode project set up on your local machine, you need to expose your server to the public; the easiest way to do this is to use a TLS/TCP tunnel, for example, ",(0,o.jsx)(t.a,{href:"https://ngrok.com/download",children:"ngrok"}),"."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"ngrok tcp 9999 --region=eu # region can be us, eu, au, ap, sa, jp, in\n"})}),"\n",(0,o.jsx)(t.p,{children:"The previous command will have this output:"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"ngrok",src:n(3577).A+"",width:"1529",height:"550"})}),"\n",(0,o.jsxs)(t.p,{children:["Copy the Forwarding URL, but remove the ",(0,o.jsx)(t.code,{children:"tcp://"})," part; for example, if you got ",(0,o.jsx)(t.code,{children:"tcp://6.tcp.eu.ngrok.io:19922"}),", then you want to use ",(0,o.jsx)(t.code,{children:"6.tcp.eu.ngrok.io:19922"})," for the following command(hlf-cc-dev)."]}),"\n",(0,o.jsx)(t.p,{children:"After having exposed your chaincode server to the public, you can run the following command to trigger:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Installation of the chaincode on the peers."}),"\n",(0,o.jsx)(t.li,{children:"Approval of the chaincode definition."}),"\n",(0,o.jsx)(t.li,{children:"Committing the chaincode definition."}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:'CHAINCODE_NAME=template_go\nAPI_URL="http://localhost:8080/graphql"\nSIGNATURE_POLICY="OR(\'Org1MSP.member\', \'Org2MSP.member\')"\nCHAINCODE_ADDRESS_TUNNEL="4.tcp.eu.ngrok.io:13438" # the forwarding URL you get from opening an ngrok tunnel\nhlf-cc-dev start --localChaincode="localhost:9999" \\\n  --chaincodeAddress="${CHAINCODE_ADDRESS_TUNNEL}" \\\n  --chaincode="${CHAINCODE_NAME}" \\\n  --signaturePolicy="${SIGNATURE_POLICY}" \\\n  --env-file="${PWD}/.env" \\\n  --apiUrl="${API_URL}"\n'})}),"\n",(0,o.jsx)(t.p,{children:"After the successful execution of the previous command, you can follow the instructions on the README.md for each template."}),"\n",(0,o.jsx)(t.p,{children:"For example, for Go, you would run the following command:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"source .env && go run ./main.go\n"})}),"\n",(0,o.jsxs)(t.p,{children:["Then you can go to ",(0,o.jsx)(t.a,{href:"http://localhost:8080/graphql",children:"http://localhost:8080/graphql"})," and test the chaincode by running the following mutation:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-graphql",children:'mutation invoke {\n  invokeChaincode(input:{\n    chaincodeName:"template_go"\n    function: "InitLedger"\n    args: []\n    transientMap: []\n  }){\n    response\n    transactionID\n    chaincodeStatus\n  }\n}\n\nmutation query {\n  queryChaincode(input:{\n    chaincodeName:"template_go"\n    function: "GetAllAssets"\n    args: []\n    transientMap: []\n  }){\n    response\n    chaincodeStatus\n  }\n}\n\n'})}),"\n",(0,o.jsx)(t.p,{children:"If there are any issues you run into with the previous mutations, this can be because:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"The network config used to start the server is not correct."}),"\n",(0,o.jsx)(t.li,{children:"The users set up in the network config are not admins."}),"\n",(0,o.jsx)(t.li,{children:"The chaincode name is not valid."}),"\n",(0,o.jsx)(t.li,{children:"The chaincode function is not valid."}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:["If after checking the previous things you still get an error, please, ",(0,o.jsx)(t.a,{href:"https://github.com/kfsoftware/hlf-cc-dev/issues/new",children:"you can open an issue"})]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},3577:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/ngrok-tunnel-19ad38122d5cc59792f1edcac83fec69.png"},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var o=n(6540);const r={},s=o.createContext(r);function i(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);