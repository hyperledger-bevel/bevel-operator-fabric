// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// FabricOperatorAPIHLFConfigApplyConfiguration represents an declarative configuration of the FabricOperatorAPIHLFConfig type for use
// with apply.
type FabricOperatorAPIHLFConfigApplyConfiguration struct {
	MSPID         *string                                           `json:"mspID,omitempty"`
	User          *string                                           `json:"user,omitempty"`
	NetworkConfig *FabricOperatorAPINetworkConfigApplyConfiguration `json:"networkConfig,omitempty"`
}

// FabricOperatorAPIHLFConfigApplyConfiguration constructs an declarative configuration of the FabricOperatorAPIHLFConfig type for use with
// apply.
func FabricOperatorAPIHLFConfig() *FabricOperatorAPIHLFConfigApplyConfiguration {
	return &FabricOperatorAPIHLFConfigApplyConfiguration{}
}

// WithMSPID sets the MSPID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MSPID field is set to the value of the last call.
func (b *FabricOperatorAPIHLFConfigApplyConfiguration) WithMSPID(value string) *FabricOperatorAPIHLFConfigApplyConfiguration {
	b.MSPID = &value
	return b
}

// WithUser sets the User field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the User field is set to the value of the last call.
func (b *FabricOperatorAPIHLFConfigApplyConfiguration) WithUser(value string) *FabricOperatorAPIHLFConfigApplyConfiguration {
	b.User = &value
	return b
}

// WithNetworkConfig sets the NetworkConfig field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the NetworkConfig field is set to the value of the last call.
func (b *FabricOperatorAPIHLFConfigApplyConfiguration) WithNetworkConfig(value *FabricOperatorAPINetworkConfigApplyConfiguration) *FabricOperatorAPIHLFConfigApplyConfiguration {
	b.NetworkConfig = value
	return b
}
