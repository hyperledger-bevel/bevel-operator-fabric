"use strict";(self.webpackChunkwebsite_docs=self.webpackChunkwebsite_docs||[]).push([[3851],{4985:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"channel-management/manage","title":"Manage the channel","description":"Add peer organization to the channel","source":"@site/docs/channel-management/manage.md","sourceDirName":"channel-management","slug":"/channel-management/manage","permalink":"/bevel-operator-fabric/docs/channel-management/manage","draft":false,"unlisted":false,"editUrl":"https://github.com/hyperledger-bevel/bevel-operator-fabric/edit/master/website/docs/channel-management/manage.md","tags":[],"version":"current","frontMatter":{"id":"manage","title":"Manage the channel"},"sidebar":"mainSidebar","previous":{"title":"Getting started","permalink":"/bevel-operator-fabric/docs/channel-management/getting-started"},"next":{"title":"Installation","permalink":"/bevel-operator-fabric/docs/kubectl-plugin/installation"}}');var a=t(4848),o=t(8453);const i={id:"manage",title:"Manage the channel"},s=void 0,d={},c=[{value:"Add peer organization to the channel",id:"add-peer-organization-to-the-channel",level:2},{value:"Add orderer organization to the channel",id:"add-orderer-organization-to-the-channel",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"add-peer-organization-to-the-channel",children:"Add peer organization to the channel"}),"\n",(0,a.jsxs)(n.p,{children:["You can add more organizations by updating the ",(0,a.jsx)(n.code,{children:"peerOrganizations"})," or ",(0,a.jsx)(n.code,{children:"externalPeerOrganizations"})," property in the ",(0,a.jsx)(n.code,{children:"FabricMainChannel"})," CRD."]}),"\n",(0,a.jsxs)(n.p,{children:["If the organization is not in the cluster, you need to add the organization to the ",(0,a.jsx)(n.code,{children:"externalPeerOrganizations"})," property, with the ",(0,a.jsx)(n.code,{children:"mspID"}),", ",(0,a.jsx)(n.code,{children:"signRootCert"})," and ",(0,a.jsx)(n.code,{children:"tlsRootCert"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"  externalPeerOrganizations:\n    - mspID: <MSP_ID>\n      signRootCert: |\n        <SIGN_ROOT_CRT_PEM>\n      tlsRootCert: |\n        <TLS_ROOT_CRT_PEM>\n"})}),"\n",(0,a.jsxs)(n.p,{children:["If the organization is in the cluster, you need to add the organization to the ",(0,a.jsx)(n.code,{children:"peerOrganizations"})," property, with the ",(0,a.jsx)(n.code,{children:"mspID"}),", ",(0,a.jsx)(n.code,{children:"signRootCert"})," and ",(0,a.jsx)(n.code,{children:"tlsRootCert"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"  peerOrganizations:\n    - caName: <CA_NAME>\n      caNamespace: <CA_NS>\n      mspID: <MSP_ID>\n"})}),"\n",(0,a.jsx)(n.h2,{id:"add-orderer-organization-to-the-channel",children:"Add orderer organization to the channel"}),"\n",(0,a.jsxs)(n.p,{children:["You can add more organizations by updating the ",(0,a.jsx)(n.code,{children:"peerOrganizations"})," or ",(0,a.jsx)(n.code,{children:"externalPeerOrganizations"})," property in the ",(0,a.jsx)(n.code,{children:"FabricMainChannel"})," CRD."]}),"\n",(0,a.jsxs)(n.p,{children:["If the organization is not in the cluster, you need to add the organization to the ",(0,a.jsx)(n.code,{children:"externalPeerOrganizations"})," property, with the ",(0,a.jsx)(n.code,{children:"mspID"}),", ",(0,a.jsx)(n.code,{children:"signRootCert"})," and ",(0,a.jsx)(n.code,{children:"tlsRootCert"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"  externalOrdererOrganizations:\n    - mspID: <MSP_ID>\n      signRootCert: |\n        <SIGN_ROOT_CRT_PEM>\n      tlsRootCert: |\n        <TLS_ROOT_CRT_PEM>\n      ordererEndpoints: # orderer endpoints for the organization in the channel configuration\n        - <ORDERER0_ENDPOINT>\n"})}),"\n",(0,a.jsxs)(n.p,{children:["If the organization is in the cluster, you need to add the organization to the ",(0,a.jsx)(n.code,{children:"peerOrganizations"})," property, with the ",(0,a.jsx)(n.code,{children:"mspID"}),", ",(0,a.jsx)(n.code,{children:"signRootCert"})," and ",(0,a.jsx)(n.code,{children:"tlsRootCert"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"  ordererOrganizations:\n    - caName: <CA_NAME>\n      caNamespace: <CA_NS>\n      externalOrderersToJoin:\n        - host: <ADMIN_ORDERER_HOST>\n          port: <ADMIN_ORDERER_PORT>\n      mspID: <MSP_ID>\n      ordererEndpoints: # orderer endpoints for the organization in the channel configuration\n        - <ORDERER0_ENDPOINT>\n      orderersToJoin: []\n"})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>s});var r=t(6540);const a={},o=r.createContext(a);function i(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);