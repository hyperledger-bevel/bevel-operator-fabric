// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// FabricMainChannelExternalPeerOrganizationApplyConfiguration represents an declarative configuration of the FabricMainChannelExternalPeerOrganization type for use
// with apply.
type FabricMainChannelExternalPeerOrganizationApplyConfiguration struct {
	MSPID        *string `json:"mspID,omitempty"`
	TLSRootCert  *string `json:"tlsRootCert,omitempty"`
	SignRootCert *string `json:"signRootCert,omitempty"`
}

// FabricMainChannelExternalPeerOrganizationApplyConfiguration constructs an declarative configuration of the FabricMainChannelExternalPeerOrganization type for use with
// apply.
func FabricMainChannelExternalPeerOrganization() *FabricMainChannelExternalPeerOrganizationApplyConfiguration {
	return &FabricMainChannelExternalPeerOrganizationApplyConfiguration{}
}

// WithMSPID sets the MSPID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MSPID field is set to the value of the last call.
func (b *FabricMainChannelExternalPeerOrganizationApplyConfiguration) WithMSPID(value string) *FabricMainChannelExternalPeerOrganizationApplyConfiguration {
	b.MSPID = &value
	return b
}

// WithTLSRootCert sets the TLSRootCert field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TLSRootCert field is set to the value of the last call.
func (b *FabricMainChannelExternalPeerOrganizationApplyConfiguration) WithTLSRootCert(value string) *FabricMainChannelExternalPeerOrganizationApplyConfiguration {
	b.TLSRootCert = &value
	return b
}

// WithSignRootCert sets the SignRootCert field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SignRootCert field is set to the value of the last call.
func (b *FabricMainChannelExternalPeerOrganizationApplyConfiguration) WithSignRootCert(value string) *FabricMainChannelExternalPeerOrganizationApplyConfiguration {
	b.SignRootCert = &value
	return b
}
