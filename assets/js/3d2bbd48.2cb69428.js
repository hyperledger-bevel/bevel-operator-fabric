"use strict";(self.webpackChunkwebsite_docs=self.webpackChunkwebsite_docs||[]).push([[1404],{2581:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>p,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>i});const o=JSON.parse('{"id":"grpc-proxy/enable-peers","title":"Enable GRPC proxy on the peers","description":"Enable GRPC proxy for Fabric Operations Console","source":"@site/docs/grpc-proxy/enable-peers.md","sourceDirName":"grpc-proxy","slug":"/grpc-proxy/enable-peers","permalink":"/bevel-operator-fabric/docs/grpc-proxy/enable-peers","draft":false,"unlisted":false,"editUrl":"https://github.com/hyperledger-bevel/bevel-operator-fabric/edit/master/website/docs/grpc-proxy/enable-peers.md","tags":[],"version":"current","frontMatter":{},"sidebar":"mainSidebar","previous":{"title":"Using custom CouchDB image","permalink":"/bevel-operator-fabric/docs/couchdb/custom-image"},"next":{"title":"Enable GRPC proxy on the orderers","permalink":"/bevel-operator-fabric/docs/grpc-proxy/enable-orderers"}}');var t=n(4848),s=n(8453);const a={},c="Enable GRPC proxy on the peers",p={},i=[{value:"Enable GRPC proxy for Fabric Operations Console",id:"enable-grpc-proxy-for-fabric-operations-console",level:2}];function l(e){const r={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"enable-grpc-proxy-on-the-peers",children:"Enable GRPC proxy on the peers"})}),"\n",(0,t.jsx)(r.h2,{id:"enable-grpc-proxy-for-fabric-operations-console",children:"Enable GRPC proxy for Fabric Operations Console"}),"\n",(0,t.jsxs)(r.p,{children:["In order to enable the GRPC Web, needed to connect the peer to the Fabric Operations console, we need to add the ",(0,t.jsx)(r.code,{children:"grpcProxy"})," property with the following attributes:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-yaml",children:"  grpcProxy:\n    enabled: true\n    image: ghcr.io/hyperledger-labs/grpc-web\n    tag: latest\n    imagePullPolicy: Always\n    istio:\n      port: 443\n      hosts:\n       - <YOUR_HOST>\n      ingressGateway: 'ingressgateway'\n    resources: \n      limits:\n        cpu: '200m'\n        memory: 256Mi\n      requests:\n        cpu: 10m\n        memory: 256Mi\n"})})]})}function d(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>c});var o=n(6540);const t={},s=o.createContext(t);function a(e){const r=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),o.createElement(s.Provider,{value:r},e.children)}}}]);