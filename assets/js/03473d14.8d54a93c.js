"use strict";(self.webpackChunkwebsite_docs=self.webpackChunkwebsite_docs||[]).push([[2853],{1904:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var t=r(4848),o=r(8453);const a={id:"create-channel",title:"Create channel"},i=void 0,c={id:"user-guide/create-channel",title:"Create channel",description:"As a pre requisite, you need to have:",source:"@site/docs/user-guide/create-channel.mdx",sourceDirName:"user-guide",slug:"/user-guide/create-channel",permalink:"/bevel-operator-fabric/docs/user-guide/create-channel",draft:!1,unlisted:!1,editUrl:"https://github.com/hyperledger-bevel/bevel-operator-fabric/edit/master/website/docs/user-guide/create-channel.mdx",tags:[],version:"current",frontMatter:{id:"create-channel",title:"Create channel"},sidebar:"mainSidebar",previous:{title:"Using network config in the kubernetes cluster",permalink:"/bevel-operator-fabric/docs/user-guide/network-config-kubernetes"},next:{title:"Install Chaincode",permalink:"/bevel-operator-fabric/docs/user-guide/install-chaincode"}},l={},s=[{value:"Generate the config channel block",id:"generate-the-config-channel-block",level:2},{value:"Join orderer to channel",id:"join-orderer-to-channel",level:2},{value:"Join peer to the channel",id:"join-peer-to-the-channel",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["As a pre requisite, you need to have:\n[x] a running ordering service\n[x] a running peer network\n[x] a network configuration file, see this ",(0,t.jsx)(n.a,{href:"/bevel-operator-fabric/docs/user-guide/network-config",children:"link"})]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"The ordering service must be configured with channel participation API enabled"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Prepare the parameters:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"CHANNEL_NAME=demo\n"})}),"\n",(0,t.jsx)(n.h2,{id:"generate-the-config-channel-block",children:"Generate the config channel block"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kubectl hlf channel generate --output=demo.block \\\n    --name=demo --organizations Org1MSP --ordererOrganizations OrdererMSP\n"})}),"\n",(0,t.jsx)(n.h2,{id:"join-orderer-to-channel",children:"Join orderer to channel"}),"\n",(0,t.jsxs)(n.p,{children:["If you haven't generated the org1.yaml, ",(0,t.jsx)(n.a,{href:"./network-config",children:"please visit this page to generate it"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kubectl hlf ordnode join --block=demo.block --name=ordservice \\\n    --namespace=default --identity=admin-tls-ordservice.yaml\n"})}),"\n",(0,t.jsx)(n.h2,{id:"join-peer-to-the-channel",children:"Join peer to the channel"}),"\n",(0,t.jsxs)(n.p,{children:["If you haven't generated the org1.yaml, ",(0,t.jsx)(n.a,{href:"./network-config",children:"please visit this page to generate it"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kubectl hlf channel join --name=demo --config=org1.yaml \\\n    --user=admin -p=org1-peer0.default\n"})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>c});var t=r(6540);const o={},a=t.createContext(o);function i(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);