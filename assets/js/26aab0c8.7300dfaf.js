"use strict";(self.webpackChunkwebsite_docs=self.webpackChunkwebsite_docs||[]).push([[5166],{5187:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var i=t(4848),r=t(8453);const o={id:"istio",title:"Istio set up"},s=void 0,a={id:"operator-guide/istio",title:"Istio set up",description:"Istio is a service mesh that provides a secure, high-performance networking platform for microservices and applications running on Kubernetes.",source:"@site/docs/operator-guide/istio.md",sourceDirName:"operator-guide",slug:"/operator-guide/istio",permalink:"/bevel-operator-fabric/docs/operator-guide/istio",draft:!1,unlisted:!1,editUrl:"https://github.com/hyperledger-bevel/bevel-operator-fabric/edit/master/website/docs/operator-guide/istio.md",tags:[],version:"current",frontMatter:{id:"istio",title:"Istio set up"},sidebar:"mainSidebar",previous:{title:"Renew certificates",permalink:"/bevel-operator-fabric/docs/operator-guide/renew-certificates"},next:{title:"Upgrade HLF operator",permalink:"/bevel-operator-fabric/docs/operator-guide/upgrade-hlf-operator"}},l={},c=[{value:"Installing istio",id:"installing-istio",level:2},{value:"Locate the public IP or hostname of the ingress gateway",id:"locate-the-public-ip-or-hostname-of-the-ingress-gateway",level:2},{value:"Running on KinD/Minikube",id:"running-on-kindminikube",level:3},{value:"Running with load balancer IP",id:"running-with-load-balancer-ip",level:3},{value:"Running with load balancer hostname",id:"running-with-load-balancer-hostname",level:3},{value:"Set up DNS",id:"set-up-dns",level:2},{value:"Local DNS set up in Linux/Mac (for MiniKube and KinD)",id:"local-dns-set-up-in-linuxmac-for-minikube-and-kind",level:3},{value:"Set up DNS in your DNS provider",id:"set-up-dns-in-your-dns-provider",level:3},{value:"Set up the network",id:"set-up-the-network",level:2},{value:"Deploying a Certificate Authority",id:"deploying-a-certificate-authority",level:3},{value:"Create the peer",id:"create-the-peer",level:3},{value:"Create the Certificate Authority for the orderer",id:"create-the-certificate-authority-for-the-orderer",level:3},{value:"Deploying the Orderer nodes node",id:"deploying-the-orderer-nodes-node",level:3},{value:"Testing orderer node connection",id:"testing-orderer-node-connection",level:3},{value:"Create the Certificate Authority with Istio",id:"create-the-certificate-authority-with-istio",level:3},{value:"Testing CA node connection",id:"testing-ca-node-connection",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Istio is a service mesh that provides a secure, high-performance networking platform for microservices and applications running on Kubernetes."}),"\n",(0,i.jsx)(n.p,{children:"Node port solutions can work in the short term, but they are not long-term solutions, neither for production, as they require opening up multiple ports to the public internet."}),"\n",(0,i.jsxs)(n.p,{children:["The following diagram represents the architecture with Istio configured\n",(0,i.jsx)(n.img,{alt:"Istio",src:t(3972).A+"",width:"1473",height:"1929"})]}),"\n",(0,i.jsx)(n.p,{children:"As you can see, we can note the following:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The Istio service mesh is running in the Kubernetes cluster"}),"\n",(0,i.jsx)(n.li,{children:"The service only has one port exposed, which is the port of the Istio ingress gateway service."}),"\n",(0,i.jsx)(n.li,{children:"The ingress gateway routes the traffic to the peer, OSN or CA depending on the request."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"installing-istio",children:"Installing istio"}),"\n",(0,i.jsxs)(n.p,{children:["You can refer to your version of choice by going to this tutorial from the ",(0,i.jsx)(n.a,{href:"https://istio.io/latest/docs/setup/getting-started/",children:"istio docs"})," to get Istio installed in your Kubernetes cluster."]}),"\n",(0,i.jsx)(n.p,{children:"Alternatively, you can just execute this command to install the latest Istio version in your Kubernetes cluster:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"curl -L https://istio.io/downloadIstio | sh - # download istioctl CLI\n\nistioctl install --set profile=default -y # install Istio\n"})}),"\n",(0,i.jsx)(n.h2,{id:"locate-the-public-ip-or-hostname-of-the-ingress-gateway",children:"Locate the public IP or hostname of the ingress gateway"}),"\n",(0,i.jsx)(n.h3,{id:"running-on-kindminikube",children:"Running on KinD/Minikube"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"PUBLIC_IP=$(kubectl get nodes -o jsonpath='{.items[0].status.addresses[?(@.type==\"InternalIP\")].address}')\n# get node port\n\nPORT=$(kubectl get svc istio-ingressgateway -n istio-system -o jsonpath='{.spec.ports[?(@.name==\"https\")].nodePort}')\n"})}),"\n",(0,i.jsx)(n.h3,{id:"running-with-load-balancer-ip",children:"Running with load balancer IP"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"PUBLIC_IP=$(kubectl get svc istio-ingressgateway -n istio-system -o json | jq -r '.status.loadBalancer.ingress[0].ip')\nPORT=443\n"})}),"\n",(0,i.jsx)(n.h3,{id:"running-with-load-balancer-hostname",children:"Running with load balancer hostname"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"PUBLIC_HOSTNAME=$(kubectl get svc istio-ingressgateway -n istio-system -o json | jq -r '.status.loadBalancer.ingress[0].hostname')\nPORT=443\n"})}),"\n",(0,i.jsx)(n.h2,{id:"set-up-dns",children:"Set up DNS"}),"\n",(0,i.jsx)(n.h3,{id:"local-dns-set-up-in-linuxmac-for-minikube-and-kind",children:"Local DNS set up in Linux/Mac (for MiniKube and KinD)"}),"\n",(0,i.jsx)(n.p,{children:"Open up /etc/hosts"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"<PUBLIC_IP> peer0.org1.example.com\n<PUBLIC_IP> ord1.ord-org.example.com\n# and so on\n"})}),"\n",(0,i.jsx)(n.h3,{id:"set-up-dns-in-your-dns-provider",children:"Set up DNS in your DNS provider"}),"\n",(0,i.jsx)(n.p,{children:"You will need to point the domain names you will use to the public IP of the ingress gateway, with either a A record, if you got a public IP, or a CNAME, if you got an ingress hostname"}),"\n",(0,i.jsx)(n.h2,{id:"set-up-the-network",children:"Set up the network"}),"\n",(0,i.jsx)(n.h3,{id:"deploying-a-certificate-authority",children:"Deploying a Certificate Authority"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl hlf ca create --storage-class=standard --capacity=2Gi --name=org1-ca \\\n    --enroll-id=enroll --enroll-pw=enrollpw  \nkubectl wait --timeout=180s --for=condition=Running fabriccas.hlf.kungfusoftware.es --all\n\n# register user for the peers\nkubectl hlf ca register --name=org1-ca --user=peer --secret=peerpw --type=peer \\\n --enroll-id enroll --enroll-secret=enrollpw --mspid Org1MSP\n"})}),"\n",(0,i.jsx)(n.h3,{id:"create-the-peer",children:"Create the peer"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"PEER1_DOMAIN=peer0.org1.example.com # domain for the peer\nISTIO_INGRESSGATEWAY=ingressgateway # name of the ingress gateway, in case there are many\nISTIO_GW_PORT=443 # port of the ingress gateway\nkubectl hlf peer create --storage-class=standard --enroll-id=peer --mspid=Org1MSP \\\n        --enroll-pw=peerpw --capacity=5Gi --name=org1-peer0 --ca-name=org1-ca.default \\\n        --hosts=$PEER1_DOMAIN --istio-ingressgateway=$ISTIO_INGRESSGATEWAY --istio-port=$ISTIO_GW_PORT\n\nkubectl wait --timeout=180s --for=condition=Running fabricpeers.hlf.kungfusoftware.es --all\n"})}),"\n",(0,i.jsx)(n.p,{children:"If we inspect the virtual services and gateways of Istio, we must see a record per peer."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl get virtualservices.networking.istio.io -A  # list all virtual services\nkubectl get gateways.networking.istio.io -A  # list all gateways\n"})}),"\n",(0,i.jsx)(n.p,{children:"To test that you can connect to the peer, you can use the following command to test directly from the command line(this test doesn't require DNS records to be set up):"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'echo "PUBLIC_IP=$PUBLIC_IP PORT=$PORT DOMAIN=$PEER1_DOMAIN"\nopenssl s_client -connect $PUBLIC_IP:$PORT -servername $PEER1_DOMAIN  -showcerts </dev/null\n'})}),"\n",(0,i.jsx)(n.h3,{id:"create-the-certificate-authority-for-the-orderer",children:"Create the Certificate Authority for the orderer"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl hlf ca create --storage-class=standard --capacity=2Gi --name=ord-ca \\\n    --enroll-id=enroll --enroll-pw=enrollpw\nkubectl wait --timeout=180s --for=condition=Running fabriccas.hlf.kungfusoftware.es --all\nkubectl hlf ca register --name=ord-ca --user=orderer --secret=ordererpw \\\n    --type=orderer --enroll-id enroll --enroll-secret=enrollpw --mspid=OrdererMSP\n"})}),"\n",(0,i.jsx)(n.h3,{id:"deploying-the-orderer-nodes-node",children:"Deploying the Orderer nodes node"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"ORD1_DOMAIN=ord1.org1-node.example.com # domain for the orderer\nISTIO_INGRESSGATEWAY=ingressgateway # name of the ingress gateway, in case there are many\nISTIO_GW_PORT=443\nkubectl hlf ordnode create --storage-class=standard --enroll-id=orderer --mspid=OrdererMSP \\\n    --enroll-pw=ordererpw --capacity=2Gi --name=ord-node1 --ca-name=ord-ca.default \\\n    --hosts=$ORD1_DOMAIN --istio-ingressgateway=$ISTIO_INGRESSGATEWAY --istio-port=$ISTIO_GW_PORT\n\nkubectl wait --timeout=180s --for=condition=Running fabricorderernodes.hlf.kungfusoftware.es --all\n"})}),"\n",(0,i.jsx)(n.h3,{id:"testing-orderer-node-connection",children:"Testing orderer node connection"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'echo "PUBLIC_IP=$PUBLIC_IP PORT=$PORT DOMAIN=$ORD1_DOMAIN"\nopenssl s_client -connect $PUBLIC_IP:$PORT -servername $ORD1_DOMAIN  -showcerts </dev/null\n'})}),"\n",(0,i.jsx)(n.h3,{id:"create-the-certificate-authority-with-istio",children:"Create the Certificate Authority with Istio"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"CA_ORG2=ca.org2.example.com # domain for the orderer\nISTIO_INGRESSGATEWAY=ingressgateway # name of the ingress gateway, in case there are many\nISTIO_GW_PORT=443\n\nkubectl hlf ca create --storage-class=standard --capacity=2Gi --name=org2-ca \\\n    --enroll-id=enroll --enroll-pw=enrollpw \\\n    --hosts=$CA_ORG2 --istio-ingressgateway=$ISTIO_INGRESSGATEWAY --istio-port=$ISTIO_GW_PORT\n\nkubectl wait --timeout=180s --for=condition=Running fabriccas.hlf.kungfusoftware.es --all\n"})}),"\n",(0,i.jsx)(n.h3,{id:"testing-ca-node-connection",children:"Testing CA node connection"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'echo "PUBLIC_IP=$PUBLIC_IP PORT=$PORT DOMAIN=$CA_ORG2"\nopenssl s_client -connect $PUBLIC_IP:$PORT -servername $CA_ORG2  -showcerts </dev/null\n'})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},3972:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/istio_hlf-387a32a088ebc7ff5d4f85672c9eab19.png"},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var i=t(6540);const r={},o=i.createContext(r);function s(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);