// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// FabricOperationsConsoleAuthApplyConfiguration represents an declarative configuration of the FabricOperationsConsoleAuth type for use
// with apply.
type FabricOperationsConsoleAuthApplyConfiguration struct {
	Scheme   *string `json:"scheme,omitempty"`
	Username *string `json:"username,omitempty"`
	Password *string `json:"password,omitempty"`
}

// FabricOperationsConsoleAuthApplyConfiguration constructs an declarative configuration of the FabricOperationsConsoleAuth type for use with
// apply.
func FabricOperationsConsoleAuth() *FabricOperationsConsoleAuthApplyConfiguration {
	return &FabricOperationsConsoleAuthApplyConfiguration{}
}

// WithScheme sets the Scheme field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Scheme field is set to the value of the last call.
func (b *FabricOperationsConsoleAuthApplyConfiguration) WithScheme(value string) *FabricOperationsConsoleAuthApplyConfiguration {
	b.Scheme = &value
	return b
}

// WithUsername sets the Username field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Username field is set to the value of the last call.
func (b *FabricOperationsConsoleAuthApplyConfiguration) WithUsername(value string) *FabricOperationsConsoleAuthApplyConfiguration {
	b.Username = &value
	return b
}

// WithPassword sets the Password field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Password field is set to the value of the last call.
func (b *FabricOperationsConsoleAuthApplyConfiguration) WithPassword(value string) *FabricOperationsConsoleAuthApplyConfiguration {
	b.Password = &value
	return b
}
