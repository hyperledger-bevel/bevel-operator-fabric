// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// FabricCAAffiliationApplyConfiguration represents an declarative configuration of the FabricCAAffiliation type for use
// with apply.
type FabricCAAffiliationApplyConfiguration struct {
	Name        *string  `json:"name,omitempty"`
	Departments []string `json:"departments,omitempty"`
}

// FabricCAAffiliationApplyConfiguration constructs an declarative configuration of the FabricCAAffiliation type for use with
// apply.
func FabricCAAffiliation() *FabricCAAffiliationApplyConfiguration {
	return &FabricCAAffiliationApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *FabricCAAffiliationApplyConfiguration) WithName(value string) *FabricCAAffiliationApplyConfiguration {
	b.Name = &value
	return b
}

// WithDepartments adds the given value to the Departments field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Departments field.
func (b *FabricCAAffiliationApplyConfiguration) WithDepartments(values ...string) *FabricCAAffiliationApplyConfiguration {
	for i := range values {
		b.Departments = append(b.Departments, values[i])
	}
	return b
}
